[1,["b5CUnvEHBHuLkCjbFrgHRM","fevfxU7cFLVbL0rZJSQf23"],["iChannel0","_effectAsset"],[["cc.Material",["_name","_techniqueData"],2,11],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,1,2],[1,0,1,2,4]],[[[[0,"Lightning",[{},"0",11,[{"defines":{"USE_TEXTURE":true}},"props",11,[{},"iChannel0",6,0]]]]],0,0,[0,0],[0,1],[0,1]],[[[1,"Lightning",[{"hash":2581360081,"record":null,"name":"Lightning|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D iChannel0;\n#endif\nvoid lightning( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 o = vec2(0.5, -0.1);\n  vec2 d = vec2(0.0, 1.0);\n  vec2 uv = fragCoord.xy;\n  vec3 col = vec3(0.0);\n  for (int i=0; i<36; i++) {\n    vec4 tex = texture(iChannel0, vec2(float(i)/256.0, cc_time.x), -100.0);\n    vec2 tgt = vec2(0.5, 1.05)-o;\n    vec2 seek = normalize(tgt)*(1.0/(length(tgt)+ 1.0));\n    d = normalize(seek + vec2(3.0, 1.0)*(vec2(-0.25, 0.0) + tex.gb));\n    float len = min(length(tgt), 0.1 * (tex.r+ 0.1));\n    float dist = abs(dot(o-uv, d.yx*vec2(1.0, -1.0)));\n    o += d*len;\n    if (dist < 0.015 && length(o-uv) < len*0.75) {\n      col = vec3(1.0);\n      break;\n    }\n  }\n  fragColor = vec4(col, col.r);\n}\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\n  lightning( o, v_uv0);\n#endif\n  o *= v_color;\n  #if USE_BGRA\n    gl_FragColor = o.bgra;\n  #else\n    gl_FragColor = o.rgba;\n  #endif\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nuniform vec4 cc_time;\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D iChannel0;\n#endif\nvoid lightning( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 o = vec2(0.5, -0.1);\n  vec2 d = vec2(0.0, 1.0);\n  vec2 uv = fragCoord.xy;\n  vec3 col = vec3(0.0);\n  for (int i=0; i<36; i++) {\n    vec4 tex = texture2D(iChannel0, vec2(float(i)/256.0, cc_time.x), -100.0);\n    vec2 tgt = vec2(0.5, 1.05)-o;\n    vec2 seek = normalize(tgt)*(1.0/(length(tgt)+ 1.0));\n    d = normalize(seek + vec2(3.0, 1.0)*(vec2(-0.25, 0.0) + tex.gb));\n    float len = min(length(tgt), 0.1 * (tex.r+ 0.1));\n    float dist = abs(dot(o-uv, d.yx*vec2(1.0, -1.0)));\n    o += d*len;\n    if (dist < 0.015 && length(o-uv) < len*0.75) {\n      col = vec3(1.0);\n      break;\n    }\n  }\n  fragColor = vec4(col, col.r);\n}\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\n  lightning( o, v_uv0);\n#endif\n  o *= v_color;\n  #if USE_BGRA\n    gl_FragColor = o.bgra;\n  #else\n    gl_FragColor = o.rgba;\n  #endif\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"USE_BGRA","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]},{"name":"iChannel0","type":29,"count":1,"binding":31,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"Lightning|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"iChannel0":{"value":"white","type":29}}}]}]]],0,0,[],[],[]]]]